<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.teaching.system.mapper.BusScoreMapper">

    <resultMap type="BusScore" id="BusScoreResult">
        <result property="id"    column="id"    />
        <result property="testId"    column="test_id"    />
        <result property="studentId"    column="student_id"    />
        <result property="courseId"    column="course_id"    />
        <result property="score"    column="score"    />
        <result property="status"    column="status"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
        <result property="userName"    column="user_name"    />
        <result property="nickName"    column="nick_name"    />
        <result property="courseName"    column="course_name"    />
    </resultMap>

    <sql id="selectBusScoreVo">
        select id, test_id, student_id, course_id, score, status, create_by, create_time, update_by, update_time, remark from bus_score
    </sql>

    <select id="selectBusScoreList" parameterType="BusScore" resultMap="BusScoreResult">
        select sc.id, sc.test_id, sc.student_id, sc.course_id, sc.score, sc.status,
        sc.create_by, sc.create_time, sc.update_by, sc.update_time, sc.remark,
                u.user_name,u.nick_name,course.course_name
        from bus_score sc
        left join sys_user u on sc.student_id = u.user_id
        left join bus_course course on sc.course_id = course.course_id
        <where>
            <if test="testId != null "> and sc.test_id = #{testId}</if>
            <if test="courseId != null "> and sc.course_id = #{courseId}</if>
            <if test="studentId != null "> and sc.student_id = #{studentId}</if>
            <if test="status != null  and status != ''"> and sc.status = #{status}</if>
        </where>
    </select>

    <select id="selectBusScoreById" parameterType="Long" resultMap="BusScoreResult">
        <include refid="selectBusScoreVo"/>
        where id = #{id}
    </select>

    <insert id="insertBusScore" parameterType="BusScore" useGeneratedKeys="true" keyProperty="id">
        insert into bus_score
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="testId != null">test_id,</if>
            <if test="studentId != null">student_id,</if>
            <if test="courseId != null">course_id,</if>
            <if test="score != null">score,</if>
            <if test="status != null">status,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="testId != null">#{testId},</if>
            <if test="studentId != null">#{studentId},</if>
            <if test="courseId != null">#{courseId},</if>
            <if test="score != null">#{score},</if>
            <if test="status != null">#{status},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
        </trim>
    </insert>

    <update id="updateBusScore" parameterType="BusScore">
        update bus_score
        <trim prefix="SET" suffixOverrides=",">
            <if test="testId != null">test_id = #{testId},</if>
            <if test="studentId != null">student_id = #{studentId},</if>
            <if test="courseId != null">course_id = #{courseId},</if>
            <if test="score != null">score = #{score},</if>
            <if test="status != null">status = #{status},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteBusScoreById" parameterType="Long">
        delete from bus_score where id = #{id}
    </delete>

    <delete id="deleteBusScoreByIds" parameterType="String">
        delete from bus_score where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    <insert id="batchBusScore">
        insert into bus_score(test_id, student_id, course_id, score, status, create_by, create_time, update_by, update_time, remark) values
        <foreach item="item" index="index" collection="list" separator=",">
            ( #{item.testId}, #{item.studentId}, #{item.courseId}, #{item.score},
            #{item.status}, #{item.createBy}, #{item.createTime}, #{item.updateBy}, #{item.updateTime},
            #{item.remark})
        </foreach>
    </insert>
</mapper>

